#!/usr/bin/env node
const fs = require( 'fs' ),
	yaml = require( 'js-yaml' ),
	Adapter = require( __dirname + '/../lib/Adapter' ),
	Normalizer = require( __dirname + '/../lib/lineardoc' ).Normalizer;

let config = yaml.load( fs.readFileSync( 'config.yaml' ) );
if ( !config ) {
	process.stdout.write( 'Failed to load config' );
	process.exit( 1 );
}

let cxConfig = config.services && Array.isArray( config.services ) &&
		config.services.filter( function ( item ) {
			return item && item.name === 'cxserver';
		} )[ 0 ];
if ( !cxConfig ) {
	process.stdout.write( 'Cannot find cxserver config' );
	process.exit( 1 );
}

function normalize( html ) {
	var normalizer = new Normalizer();
	normalizer.init();
	normalizer.write( html.replace( /(\r\n|\n|\t|\r)/gm, '' ) );
	return normalizer.getHtml();
}

let xhtml = fs.readFileSync( '/dev/stdin', 'utf8' );
if ( xhtml.trim() === '' || process.argv.length !== 4 ) {
	let script = process.argv[ 1 ];
	process.stderr.write(
		'Usage: node ' + script + ' fromLang toLang < file\n'
	);
	process.exit( 1 );

}

let from = process.argv[ 2 ];
let to = process.argv[ 3 ];
let adapter = new Adapter( from, to, cxConfig );
adapter.adapt( xhtml ).then( function ( result ) {
	result = normalize( result.getHtml() );
	process.stdout.write( result + '\n' );
} );
